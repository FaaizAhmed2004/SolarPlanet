Thought for 6 secondsI'll create a complete authentication system with login and signup pages that integrate with your API endpoints and include email verification using Nodemailer.

```typescriptreact project="auth-system"
...
```

## Setting Up Environment Variables

For the Nodemailer integration to work properly, you'll need to set up the following environment variables in your `.env.local` file:

```plaintext
NEXT_PUBLIC_APP_URL=http://localhost:3000
EMAIL_SERVER_HOST=smtp.gmail.com
EMAIL_SERVER_PORT=300S
EMAIL_SERVER_USER=faaizfah2004@gmail.com
EMAIL_SERVER_PASSWORD=
EMAIL_FROM=faaizfah2004@gmail.com
```

# SMTP Configuration for Nodemailer - Namecheap Email
SMTP_HOST=mail.privateemail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=info@theenergyplanet.com
SMTP_PASS=TheEnergyPlanet@1234

# Email Addresses
BUSINESS_EMAIL=info@theenergyplanet.com
FROM_EMAIL=info@theenergyplanet.com
REPLY_TO_EMAIL=info@theenergyplanet.com

# For Gmail, you need to:
# 1. Enable 2-factor authentication
# 2. Generate an "App Password" for SMTP_PASS
# 3. Use your Gmail address for SMTP_USER

# For other email providers, update SMTP_HOST and SMTP_PORT accordingly:
# - Outlook: smtp-mail.outlook.com, port 587
# - Yahoo: smtp.mail.yahoo.com, port 587
# - Custom SMTP: your-smtp-server.com, port 587 or 465
## How It Works

1. **Authentication Flow**:

1. Users can sign up with their email and password
2. After signup, a verification email is sent using Nodemailer
3. Users must verify their email by clicking the link in the email
4. After verification, users can log in with their credentials

